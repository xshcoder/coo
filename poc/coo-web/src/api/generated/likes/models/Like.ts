/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Like
 */
export interface Like {
    /**
     * 
     * @type {string}
     * @memberof Like
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Like
     */
    cooId?: string;
    /**
     * 
     * @type {string}
     * @memberof Like
     */
    replyId?: string;
    /**
     * 
     * @type {string}
     * @memberof Like
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof Like
     */
    likedToUserId?: string;
    /**
     * 
     * @type {Date}
     * @memberof Like
     */
    likedAt?: Date;
}

/**
 * Check if a given object implements the Like interface.
 */
export function instanceOfLike(value: object): value is Like {
    return true;
}

export function LikeFromJSON(json: any): Like {
    return LikeFromJSONTyped(json, false);
}

export function LikeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Like {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'cooId': json['cooId'] == null ? undefined : json['cooId'],
        'replyId': json['replyId'] == null ? undefined : json['replyId'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'likedToUserId': json['likedToUserId'] == null ? undefined : json['likedToUserId'],
        'likedAt': json['likedAt'] == null ? undefined : (new Date(json['likedAt'])),
    };
}

export function LikeToJSON(json: any): Like {
    return LikeToJSONTyped(json, false);
}

export function LikeToJSONTyped(value?: Like | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'cooId': value['cooId'],
        'replyId': value['replyId'],
        'userId': value['userId'],
        'likedToUserId': value['likedToUserId'],
        'likedAt': value['likedAt'] == null ? undefined : ((value['likedAt']).toISOString()),
    };
}

