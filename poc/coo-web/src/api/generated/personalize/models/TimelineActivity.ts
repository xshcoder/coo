/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TimelineActivity
 */
export interface TimelineActivity {
    /**
     * 
     * @type {string}
     * @memberof TimelineActivity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineActivity
     */
    cooId?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineActivity
     */
    userHandle?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineActivity
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineActivity
     */
    content?: string;
    /**
     * 
     * @type {Date}
     * @memberof TimelineActivity
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof TimelineActivity
     */
    repliedToUserId?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineActivity
     */
    repliedToUserHandle?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineActivity
     */
    repliedToReplyId?: string;
    /**
     * 
     * @type {string}
     * @memberof TimelineActivity
     */
    type?: TimelineActivityTypeEnum;
}


/**
 * @export
 */
export const TimelineActivityTypeEnum = {
    Coo: 'Coo',
    Reply: 'Reply'
} as const;
export type TimelineActivityTypeEnum = typeof TimelineActivityTypeEnum[keyof typeof TimelineActivityTypeEnum];


/**
 * Check if a given object implements the TimelineActivity interface.
 */
export function instanceOfTimelineActivity(value: object): value is TimelineActivity {
    return true;
}

export function TimelineActivityFromJSON(json: any): TimelineActivity {
    return TimelineActivityFromJSONTyped(json, false);
}

export function TimelineActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimelineActivity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'cooId': json['cooId'] == null ? undefined : json['cooId'],
        'userHandle': json['userHandle'] == null ? undefined : json['userHandle'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'content': json['content'] == null ? undefined : json['content'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'repliedToUserId': json['repliedToUserId'] == null ? undefined : json['repliedToUserId'],
        'repliedToUserHandle': json['repliedToUserHandle'] == null ? undefined : json['repliedToUserHandle'],
        'repliedToReplyId': json['repliedToReplyId'] == null ? undefined : json['repliedToReplyId'],
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function TimelineActivityToJSON(json: any): TimelineActivity {
    return TimelineActivityToJSONTyped(json, false);
}

export function TimelineActivityToJSONTyped(value?: TimelineActivity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'cooId': value['cooId'],
        'userHandle': value['userHandle'],
        'userId': value['userId'],
        'content': value['content'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'repliedToUserId': value['repliedToUserId'],
        'repliedToUserHandle': value['repliedToUserHandle'],
        'repliedToReplyId': value['repliedToReplyId'],
        'type': value['type'],
    };
}

